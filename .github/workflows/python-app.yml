# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Backend (Core)

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  Start-Server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version:  3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check server startup
      run: |
        python scripts/check_run_backend.py
      timeout-minutes: 1
    - name: Upload outputs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: start_server
        path: output/*.txt

  Pytest-Core:
    runs-on: ubuntu-latest
    needs: Start-Server
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version:  3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        python scripts/pytest_core.py
      timeout-minutes: 10
    - name: Upload outputs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pytest_core
        path: output/*.txt
        if-no-files-found: ignore

  Pytest-Full:
    runs-on: ubuntu-latest
    needs: Pytest-Core
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version:  3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        python scripts/pytest_full.py --coverage
      timeout-minutes: 10
    - name: Generate code coverage report
      if: ${{ github.event_name }} == 'pull_request'
      run: |
        python -m coverage xml coverage.xml
    - name: Create code coverage comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: orgoro/coverage@v3
      with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload outputs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pytest_full
        path: output/*.txt
        if-no-files-found: ignore

  Flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8
      timeout-minutes: 2

  Mypy:
    runs-on: ubuntu-latest
    needs:
    - Start-Server
    - Flake8
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with mypy
      run: |
        mypy .
      timeout-minutes: 5
